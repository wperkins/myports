diff -Naur src/cgnstools/CMakeLists.txt src/cgnstools/CMakeLists.txt
--- src/cgnstools/CMakeLists.txt	2013-06-19 21:04:00.000000000 -0700
+++ src/cgnstools/CMakeLists.txt	2019-02-22 08:57:17.000000000 -0800
@@ -55,7 +55,7 @@
   add_subdirectory(cgnsview)
   add_subdirectory(calclib)
   add_subdirectory(cgnscalc)
-  add_subdirectory(cgnsplot)
+  # add_subdirectory(cgnsplot)
   add_subdirectory(common)
   add_subdirectory(tkogl)
   add_subdirectory(utilities)
diff -Naur src/cgnstools/CMakeLists.txt~ src/cgnstools/CMakeLists.txt~
--- src/cgnstools/CMakeLists.txt~	1969-12-31 16:00:00.000000000 -0800
+++ src/cgnstools/CMakeLists.txt~	2013-06-19 21:04:00.000000000 -0700
@@ -0,0 +1,97 @@
+#############
+# cgnstools #
+#############
+
+# get X11 in case it is not in a standard location
+if (NOT WIN32)
+  include(FindX11)
+  # Xmu doesn't appear to be included in FindX11
+  find_library(X11_Xmu_LIB Xmu)
+  if (X11_Xmu_LIB)
+    mark_as_advanced(FORCE X11_Xmu_LIB)
+  endif (X11_Xmu_LIB)
+endif (NOT WIN32)
+
+if (WIN32)
+  include(FindHTMLHelp)
+endif (WIN32)
+
+include(FindTCL)
+include(FindOpenGL)
+
+set(Missing "")
+if (TCL_FOUND)
+  mark_as_advanced(FORCE TCL_INCLUDE_PATH TCL_LIBRARY)
+else (TCL_FOUND)
+  mark_as_advanced(CLEAR TCL_INCLUDE_PATH TCL_LIBRARY)
+  list(APPEND Missing "TCL")
+endif (TCL_FOUND)
+
+if (TK_FOUND)
+  mark_as_advanced(FORCE TK_INCLUDE_PATH TK_LIBRARY)
+else (TK_FOUND)
+  mark_as_advanced(CLEAR TK_INCLUDE_PATH TK_LIBRARY)
+  list(APPEND Missing "TK")
+endif (TK_FOUND)
+
+if (OPENGL_FOUND)
+  mark_as_advanced(FORCE OPENGL_INCLUDE_PATH OPENGL_gl_LIBRARY)
+else (OPENGL_FOUND)
+  mark_as_advanced(CLEAR OPENGL_INCLUDE_PATH OPENGL_gl_LIBRARY)
+  list(APPEND Missing "OPENGL_gl")
+endif (OPENGL_FOUND)
+
+if (OPENGL_GLU_FOUND)
+  mark_as_advanced(FORCE OPENGL_glu_LIBRARY)
+else (OPENGL_GLU_FOUND)
+  mark_as_advanced(CLEAR OPENGL_glu_LIBRARY)
+  list(APPEND Missing "OPENGL_glu")
+endif (OPENGL_GLU_FOUND)
+
+if (Missing)
+  message(SEND_ERROR "The path and library needs to be defined for:
+    ${Missing}")
+else (Missing)
+  add_subdirectory(cgnsview)
+  add_subdirectory(calclib)
+  add_subdirectory(cgnscalc)
+  add_subdirectory(cgnsplot)
+  add_subdirectory(common)
+  add_subdirectory(tkogl)
+  add_subdirectory(utilities)
+endif (Missing)
+
+if (WIN32)
+  file(TO_NATIVE_PATH ${CMAKE_INSTALL_PREFIX} WIN_INSTALL_DIR)
+  file(WRITE ${CMAKE_CURRENT_BINARY_DIR}/cgconfig.bat
+"set CG_BIN_DIR=${WIN_INSTALL_DIR}\\bin
+set CG_LIB_DIR=${WIN_INSTALL_DIR}\\share
+")
+# don't need this since dll is put in the bin directory
+#  if (CGNS_USE_SHARED)
+#    file(APPEND ${CMAKE_CURRENT_BINARY_DIR}/cgconfig.bat
+#      "set PATH=${WIN_INSTALL_DIR}\\lib;%PATH%"
+#    )
+#  endif (CGNS_USE_SHARED)
+# add Tcl path for dll's
+  if (TK_WISH)
+    get_filename_component(TK_DLL ${TK_WISH} PATH)
+    file(TO_NATIVE_PATH ${TK_DLL} TK_DLL_DIR)
+    file(APPEND ${CMAKE_CURRENT_BINARY_DIR}/cgconfig.bat
+      "set PATH=${TK_DLL_DIR};%PATH%"
+    )
+  endif (TK_WISH)
+
+  install(PROGRAMS
+	${CMAKE_CURRENT_BINARY_DIR}/cgconfig.bat
+	DESTINATION bin)
+else (WIN32)
+  file(WRITE ${CMAKE_CURRENT_BINARY_DIR}/cgconfig
+"CG_BIN_DIR=${CMAKE_INSTALL_PREFIX}/bin; export CG_BIN_DIR
+CG_LIB_DIR=${CMAKE_INSTALL_PREFIX}/share/cgnstools; export CG_LIB_DIR
+")
+
+  install(PROGRAMS
+	${CMAKE_CURRENT_BINARY_DIR}/cgconfig
+	DESTINATION bin)
+endif (WIN32)
diff -Naur src/cgnstools/utilities/CMakeLists.txt src/cgnstools/utilities/CMakeLists.txt
--- src/cgnstools/utilities/CMakeLists.txt	2013-06-19 21:26:02.000000000 -0700
+++ src/cgnstools/utilities/CMakeLists.txt	2019-02-22 09:00:47.000000000 -0800
@@ -60,7 +60,8 @@
 	cgns_to_plot3d.c
 	cgnsutil.c
 	../common/getargs.c
-	p3dfout.c)
+	p3dfout.c
+        binaryio.c)
 
 add_executable(cgns_to_plot3d ${cgns_to_plot3d_FILES})
 add_dependencies(cgns_to_plot3d cgns_static calclib)
diff -Naur src/cgnstools/utilities/CMakeLists.txt~ src/cgnstools/utilities/CMakeLists.txt~
--- src/cgnstools/utilities/CMakeLists.txt~	1969-12-31 16:00:00.000000000 -0800
+++ src/cgnstools/utilities/CMakeLists.txt~	2013-06-19 21:26:02.000000000 -0700
@@ -0,0 +1,290 @@
+#############
+# utilities #
+#############
+
+include_directories(../..)
+include_directories(../calclib)
+include_directories(../common)
+
+# cgns_info
+link_directories(.)
+if (CGNS_USE_SHARED)
+  link_libraries(cgns_shared)
+else (CGNS_USE_SHARED)
+  link_libraries(cgns_static)
+endif (CGNS_USE_SHARED)
+link_libraries(calclib)
+if (NOT WIN32)
+  link_libraries(m)
+endif (NOT WIN32)
+
+if (CGNS_ENABLE_HDF5 AND HDF5_LIBRARY)
+  link_libraries(${HDF5_LIBRARY})
+  if(HDF5_NEED_ZLIB AND ZLIB_LIBRARY)
+    link_libraries(${ZLIB_LIBRARY})
+  endif(HDF5_NEED_ZLIB AND ZLIB_LIBRARY)
+  if(HDF5_NEED_SZIP AND SZIP_LIBRARY)
+    link_libraries(${SZIP_LIBRARY})
+  endif(HDF5_NEED_SZIP AND SZIP_LIBRARY)
+  if(HDF5_NEED_MPI AND MPI_LIBS)
+    link_libraries(${MPI_LIBS})
+  endif(HDF5_NEED_MPI AND MPI_LIBS)
+endif (CGNS_ENABLE_HDF5 AND HDF5_LIBRARY)
+
+if (NOT WIN32)
+  link_libraries(m)
+endif (NOT WIN32)
+
+set(cgns_info_FILES
+	cgns_info.c
+	cgnsutil.c
+	../common/getargs.c)
+
+add_executable(cgns_info ${cgns_info_FILES})
+add_dependencies(cgns_info cgns_static calclib)
+
+#----------
+
+# plot3d_to_cgns
+set(plot3d_to_cgns_FILES 
+	plot3d_to_cgns.c
+	cgnsutil.c
+	binaryio.c
+	../common/getargs.c)
+
+add_executable(plot3d_to_cgns ${plot3d_to_cgns_FILES})
+add_dependencies(plot3d_to_cgns cgns_static calclib)
+
+# cgns_to_plot3d
+set(cgns_to_plot3d_FILES 
+	cgns_to_plot3d.c
+	cgnsutil.c
+	../common/getargs.c
+	p3dfout.c)
+
+add_executable(cgns_to_plot3d ${cgns_to_plot3d_FILES})
+add_dependencies(cgns_to_plot3d cgns_static calclib)
+
+#----------
+
+# patran_to_cgns
+set(patran_to_cgns_FILES 
+	patran_to_cgns.c
+	cgnsImport.c
+	../common/getargs.c
+	../common/hash.c)
+
+add_executable(patran_to_cgns ${patran_to_cgns_FILES})
+add_dependencies(patran_to_cgns cgns_static calclib)
+
+#----------
+
+# tecplot_to_cgns
+set(tecplot_to_cgns_FILES
+	tecplot_to_cgns.c
+	cgnsImport.c
+	../common/getargs.c
+	../common/hash.c)
+
+add_executable(tecplot_to_cgns ${tecplot_to_cgns_FILES})
+add_dependencies(tecplot_to_cgns cgns_static calclib)
+
+# cgns_to_tecplot
+set(cgns_to_tecplot_FILES
+	cgns_to_tecplot.c
+	cgnsutil.c
+	../common/getargs.c)
+
+add_executable(cgns_to_tecplot ${cgns_to_tecplot_FILES})
+add_dependencies(cgns_to_tecplot cgns_static calclib)
+
+#----------
+
+# tetgen_to_cgns
+set(tetgen_to_cgns_FILES
+	tetgen_to_cgns.c)
+
+add_executable(tetgen_to_cgns ${tetgen_to_cgns_FILES})
+add_dependencies(tetgen_to_cgns cgns_static calclib)
+
+#----------
+
+# vgrid_to_cgns
+set(vgrid_to_cgns_FILES
+	vgrid_to_cgns.c
+	binaryio.c
+	../common/getargs.c)
+
+add_executable(vgrid_to_cgns ${vgrid_to_cgns_FILES})
+add_dependencies(vgrid_to_cgns cgns_static calclib)
+
+#----------
+
+# aflr3_to_cgns
+set(aflr3_to_cgns_FILES
+	aflr3_to_cgns.c
+	binaryio.c
+	../common/getargs.c)
+
+add_executable(aflr3_to_cgns ${aflr3_to_cgns_FILES})
+add_dependencies(aflr3_to_cgns cgns_static calclib)
+
+# cgns_to_aflr3
+set(cgns_to_aflr3_FILES
+	cgns_to_aflr3.c
+	../common/getargs.c
+	../common/hash.c)
+
+add_executable(cgns_to_aflr3 ${cgns_to_aflr3_FILES})
+add_dependencies(cgns_to_aflr3 cgns_static calclib)
+
+#----------
+
+# fast_to_cgns
+set(fast_to_cgns_FILES
+	fast_to_cgns.c
+	binaryio.c
+	../common/getargs.c)
+
+add_executable(fast_to_cgns ${fast_to_cgns_FILES})
+add_dependencies(fast_to_cgns cgns_static calclib)
+
+# cgns_to_fast
+set(cgns_to_fast_FILES
+	cgns_to_fast.c
+	../common/getargs.c
+	../common/hash.c)
+
+add_executable(cgns_to_fast ${cgns_to_fast_FILES})
+add_dependencies(cgns_to_fast cgns_static calclib)
+
+#----------
+
+# cgns_to_vtk
+set(cgns_to_vtk_FILES
+	cgns_to_vtk.c
+	../common/getargs.c)
+
+add_executable(cgns_to_vtk ${cgns_to_vtk_FILES})
+add_dependencies(cgns_to_vtk cgns_static calclib)
+
+#----------
+
+# convert_location
+set(convert_location_FILES
+	convert_location.c
+	cgnsutil.c
+	../common/getargs.c)
+
+add_executable(convert_location ${convert_location_FILES})
+
+# convert_variables
+set(convert_variables_FILES
+	convert_variables.c
+	cgnsutil.c
+	../common/getargs.c)
+
+add_executable(convert_variables ${convert_variables_FILES})
+add_dependencies(convert_variables cgns_static calclib)
+
+# convert_dataclass
+set(convert_dataclass_FILES
+	convert_dataclass.c
+	cgnsutil.c
+	../common/getargs.c)
+
+add_executable(convert_dataclass ${convert_dataclass_FILES})
+add_dependencies(convert_dataclass cgns_static calclib)
+
+# extract_subset
+set(extract_subset_FILES
+	extract_subset.c
+	cgnsutil.c
+	../common/getargs.c)
+
+add_executable(extract_subset ${extract_subset_FILES})
+add_dependencies(extract_subset cgns_static calclib)
+
+# interpolate_cgns
+set(interpolate_cgns_FILES
+	interpolate_cgns.c
+	cgnsutil.c
+	../common/getargs.c)
+
+add_executable(interpolate_cgns ${interpolate_cgns_FILES})
+add_dependencies(interpolate_cgns cgns_static calclib)
+
+if (WIN32)
+  install(TARGETS
+        plot3d_to_cgns
+	cgns_to_plot3d
+	patran_to_cgns
+	tecplot_to_cgns
+	cgns_to_tecplot
+	tetgen_to_cgns
+	vgrid_to_cgns
+	aflr3_to_cgns
+	cgns_to_aflr3
+	fast_to_cgns
+	cgns_to_fast
+	cgns_to_vtk
+	convert_location
+	convert_variables
+	convert_dataclass
+	extract_subset
+	interpolate_cgns
+	RUNTIME DESTINATION bin)
+  install(FILES
+	conserved.cnv
+	convert.tcl
+	dimensional.cnv
+	patran.tcl
+	plot3d.tcl
+	primitive.cnv
+	tecplot.tcl
+	tetgen.tcl
+	vgrid.tcl
+	aflr3.tcl
+	fast.tcl
+	util.tcl
+	utilities.mnu
+	vtk.tcl
+	DESTINATION share)
+else (WIN32)
+  install(TARGETS
+        plot3d_to_cgns
+	cgns_to_plot3d
+	patran_to_cgns
+	tecplot_to_cgns
+	cgns_to_tecplot
+	tetgen_to_cgns
+	vgrid_to_cgns
+	aflr3_to_cgns
+	cgns_to_aflr3
+	fast_to_cgns
+	cgns_to_fast
+	cgns_to_vtk
+	convert_location
+	convert_variables
+	convert_dataclass
+	extract_subset
+	interpolate_cgns
+	RUNTIME DESTINATION bin/cgnstools)
+  install(FILES
+	conserved.cnv
+	convert.tcl
+	dimensional.cnv
+	patran.tcl
+	plot3d.tcl
+	primitive.cnv
+	tecplot.tcl
+	tetgen.tcl
+	vgrid.tcl
+	aflr3.tcl
+	fast.tcl
+	util.tcl
+	utilities.mnu
+	vtk.tcl
+	DESTINATION share/cgnstools)
+endif (WIN32)
+
diff -Naur src/cgnstools/utilities/p3dfout.c src/cgnstools/utilities/p3dfout.c
--- src/cgnstools/utilities/p3dfout.c	2013-06-19 21:03:59.000000000 -0700
+++ src/cgnstools/utilities/p3dfout.c	2019-02-22 08:59:23.000000000 -0800
@@ -19,8 +19,8 @@
     MACH_LOCAL == MACH_DOS32 || \
     MACH_LOCAL == MACH_UNKNOWN
     fprintf (stderr,
-        "Fortran unformatted output not supported for %s machine\n",
-        bf_machname (MACH_LOCAL);
+             "Fortran unformatted output not supported for %s machine\n",
+             bf_machname (MACH_LOCAL));
     exit (1);
 #else
     buff = (char *) malloc (length + 1);
diff -Naur src/cgnstools/utilities/p3dfout.c~ src/cgnstools/utilities/p3dfout.c~
--- src/cgnstools/utilities/p3dfout.c~	1969-12-31 16:00:00.000000000 -0800
+++ src/cgnstools/utilities/p3dfout.c~	2013-06-19 21:03:59.000000000 -0700
@@ -0,0 +1,121 @@
+#include <stdio.h>
+#include <string.h>
+#include <ctype.h>
+#include <stdlib.h>
+#include "binaryio.h"
+
+static FILE *p3dout;
+
+void OPENF (int *read, char *fname, int length)
+{
+    char *p, *buff;
+
+    if (*read) {
+        fprintf (stderr, "reading not supported\n");
+        exit (1);
+    }
+#if MACH_LOCAL == MACH_CRAY  || \
+    MACH_LOCAL == MACH_DOS16 || \
+    MACH_LOCAL == MACH_DOS32 || \
+    MACH_LOCAL == MACH_UNKNOWN
+    fprintf (stderr,
+        "Fortran unformatted output not supported for %s machine\n",
+        bf_machname (MACH_LOCAL);
+    exit (1);
+#else
+    buff = (char *) malloc (length + 1);
+    if (NULL == buff) {
+        fprintf (stderr, "malloc failed for filename working buffer\n");
+        exit (1);
+    }
+    strncpy (buff, fname, length);
+    buff[length] = 0;
+    for (p = buff+strlen(buff)-1; p >= buff && isspace(*p); p--)
+        ;
+    *++p = 0;
+    for (p = buff; *p && isspace(*p); p++)
+        ;
+    if (NULL == (p3dout = fopen (p, "w+b"))) {
+        fprintf (stderr, "couldn't open <%s> for writing\n", fname);
+        exit (1);
+    }
+    free (buff);
+#endif
+}
+
+void CLOSEF (void)
+{
+    fclose (p3dout);
+}
+
+void WRITEIF (int *icnt, int *idata, int *ierr)
+{
+    unsigned int reclen = (unsigned int)*icnt * sizeof(int);
+
+    if (fwrite (&reclen, sizeof(int), 1, p3dout) != 1 ||
+        fwrite (idata, sizeof(int), *icnt, p3dout) != *icnt ||
+        fwrite (&reclen, sizeof(int), 1, p3dout) != 1)
+        *ierr = 1;
+    else
+        *ierr = 0;
+    return;
+}
+
+void WRITEFF (int *icnt, float *rdata, int *ierr)
+{
+    unsigned int reclen = (unsigned int)*icnt * sizeof(float);
+
+    if (fwrite (&reclen, sizeof(int), 1, p3dout) != 1 ||
+        fwrite (rdata, sizeof(float), *icnt, p3dout) != *icnt ||
+        fwrite (&reclen, sizeof(int), 1, p3dout) != 1)
+        *ierr = 1;
+    else
+        *ierr = 0;
+    return;
+}
+
+void WRITEDF (int *icnt, double *rdata, int *ierr)
+{
+    unsigned int reclen = (unsigned int)*icnt * sizeof(double);
+
+    if (fwrite (&reclen, sizeof(int), 1, p3dout) != 1 ||
+        fwrite (rdata, sizeof(double), *icnt, p3dout) != *icnt ||
+        fwrite (&reclen, sizeof(int), 1, p3dout) != 1)
+        *ierr = 1;
+    else
+        *ierr = 0;
+    return;
+}
+
+void WRITEGFF(int *icnt, float *rdata, int *idata, int *ierr)
+{
+    unsigned int rcnt = 3 * (unsigned int)*icnt;
+    unsigned int reclen = rcnt * sizeof(float) +
+                          (unsigned int)*icnt * sizeof(int);
+
+    if (fwrite (&reclen, sizeof(int), 1, p3dout) != 1 ||
+        fwrite (rdata, sizeof(float), rcnt, p3dout) != rcnt ||
+        fwrite (idata, sizeof(int), *icnt, p3dout) != *icnt ||
+        fwrite (&reclen, sizeof(int), 1, p3dout) != 1)
+        *ierr = 1;
+    else
+        *ierr = 0;
+    return;
+}
+
+void WRITEGDF(int *icnt, double *rdata, int *idata, int *ierr)
+{
+    unsigned int rcnt = 3 * (unsigned int)*icnt;
+    unsigned int reclen = rcnt * sizeof(double) +
+                          (unsigned int)*icnt * sizeof(int);
+
+    if (fwrite (&reclen, sizeof(int), 1, p3dout) != 1 ||
+        fwrite (rdata, sizeof(double), rcnt, p3dout) != rcnt ||
+        fwrite (idata, sizeof(int), *icnt, p3dout) != *icnt ||
+        fwrite (&reclen, sizeof(int), 1, p3dout) != 1)
+        *ierr = 1;
+    else
+        *ierr = 0;
+    return;
+}
+
