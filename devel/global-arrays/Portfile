# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4
# $Id$

PortSystem          1.0
PortGroup           mpi 1.0
PortGroup           github 1.0

name                global-arrays
version             5.6.2
revision            1
categories          math
license             BSD
platforms           darwin
maintainers         william.perkins@pnnl.gov
description         Primitives for one-sided communication. 
long_description    Global Arrays (GA) is a Partitioned Global Address \
                    Space (PGAS) programming model. It provides \
                    primitives for one-sided communication (Get, Put, \
                    Accumulate) and Atomic Operations (read \
                    increment). It supports blockinbg and non-blocking \
                    primtives, and supports location consistency.

homepage            http://hpc.pnl.gov/globalarrays/

github.setup        GlobalArrays ga ${version} v


universal_variant   no
worksrcdir          ga-${version}

checksums           sha1    f7a0cb74e499f0029405c2cd34fc71e4ac292600 \
                    rmd160  2e6b0b7fd9f46077ba700543801920f7a56bea15 \
                    sha256  1fd17c78eecaf6186333f3633230c67a210098a87d9934a9613c084d3e4ddb0f

mpi.setup           require -gcc


# This downloads and builds autotools, and maybe something else, but
# it seems that just using autoreconf works

# pre-configure {
#     system "cd ${worksrcpath}; ./autogen.sh"
# }

use_autoreconf      yes
autoreconf.args     -fiv

pre-configure {        
    configure.args-append \
        MPICC="${configure.cc}" \
        MPICXX="${configure.cxx}" \
        MPIF77="${configure.fc}" \
        COPTFLAGS="${configure.optflags}" \
        CXXOPTFLAGS="${configure.optflags}" \
        FOPTFLAGS="${configure.optflags}" \
        LDFLAGS="${configure.ldflags}" \
        CPPFLAGS="${configure.cppflags}" \
        CFLAGS="${configure.cflags} ${configure.cc_archflags}" \
        CXXFLAGS="${configure.cxxflags}" \
        MPIEXEC=${prefix}/bin/${mpi.exec} \
        --disable-cxx \
        --disable-f77 \
        --disable-assert \
        --enable-i4 \
        --with-mpi \
        --with-mpi-ts \
        --enable-autodetect=yes \
        --without-blas \
        --without-lapack \
        --without-scalapack \
        --enable-shared=yes \
        --enable-static=yes \
        --prefix=${prefix}

}

variant static description {Build only static libraries.} {
    configure.args-delete --enable-shared=yes
    configure.args-append --enable-shared=no
}

variant cxx description {Build with C++ API.} {
    configure.args-delete --disable-cxx
    configure.args-append --enable-cxx
}

variant fortran description {Build with Fortran API. } {
    configure.args-delete --disable-f77
    configure.args-append --enable-f77
}

variant debug description { Build with debug information. } {
    configure.cflags    -g
    configure.cxxflags  -g
}

